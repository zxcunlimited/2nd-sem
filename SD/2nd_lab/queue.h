#pragma once
// Узел очереди: каждый элемент хранит значение (например, число) и указатель на следующий узел
struct QueueNode
{
    double value;               // Значение, хранимое в этом элементе (например, число 5.0)
    struct QueueNode* next;     // Указатель на следующий элемент в очереди (NULL, если последний)
};

// Очередь: содержит указатели на начало и конец
struct Queue
{
    struct QueueNode* front;    // Первый элемент (тот, кто "входит" в обработку первым)
    struct QueueNode* rear;     // Последний элемент (куда добавляется новый узел)
};

// === ФУНКЦИИ РАБОТЫ С ОЧЕРЕДЬЮ ===

// Инициализация очереди: делает очередь пустой (оба указателя NULL)
void init_queue(struct Queue* q);

// Добавить элемент в конец очереди (enqueue / push)
void enqueue(struct Queue* q, double val);

// Удалить элемент из начала очереди и вернуть его значение (dequeue / pop)
double dequeue(struct Queue* q);

// Проверка: пуста ли очередь? (возвращает 1 если да, 0 если нет)
int is_queue_empty(struct Queue* q);

// Очистка всех элементов и освобождение памяти (полезно для завершения программы)
void free_queue(struct Queue* q);
